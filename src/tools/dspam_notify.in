#!/usr/bin/perl
#
# $Id: dspam_notify,v 1.02 2010/03/13 02:33:44 sbajic Exp $

use Net::SMTP;

# Enter the location of you dspam.conf, dspam binary and path to dspam_admin/dspam_stats.
$DSPAMCONF = '@sysconfdir@/dspam.conf';
$DSPAM_BINARY = '@bindir@/@dspam_transformed@';
$BINDIR = '@bindir@';

# Who will the notifications be sent from?
$FROM = 'dspam@domain.tld';
  
# What will the notification subject be?
$SUBJECT = 'Daily Spam Quarantine Summary';

# Quarantine URL
$DSPAM_URL = 'https://dspam.domain.tld';

# Address of your SMTP server?  localhost should be fine.
$SERVER = 'localhost';

# Port of your SMTP server? 25 should be fine
$PORT = '25';

# Enable User Preference Checking (Very CPU Intensive!!!) Not Recommended for more than 500 email accounts.
$PREF_CHECK = 0;

######################################
# No need to config below this point.#
######################################


#Build the Quarantine URL
$QUARANTINE_URL = $DSPAM_URL . '/dspam.cgi?template=quarantine';

# Autodetect scale and preference extension support
$LARGE_SCALE = 0;
$DOMAIN_SCALE = 0;
$PREFERENCES_EXTENSION = 0;
do {
  my $x = `$DSPAM_BINARY --version`;
  $PREFERENCES_EXTENSION = 1 if ($x =~ /--enable-preferences-extension/);
  $LARGE_SCALE = 1 if ($x =~ /--enable-large-scale/);
  $DOMAIN_SCALE = 1 if ($x =~ /--enable-domain-scale/) ;
};

# Date Formatting
my ($SEC,$MIN,$HOUR,$MDAY,$MON,$YEAR,$WDAY,$YDAY,$ISDST) = localtime(time);
  
# Array containing Days of the week abreviations
@WEEKDAYS = ('Sun','Mon','Tue','Wed','Thur','Fri','Sat');
    
# Array containing Month abreviations
@MONTHS = ('Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec');
    
$D = (localtime)[6];
$M = (localtime)[4];

$DAY_ABR = $WEEKDAYS[$D];
$MONTH_ABR = $MONTHS[$M];
$DAY_NUM = $MDAY; 
$YEAR += 1900;

$TODAY = $DAY_ABR . " " . $MONTH_ABR . " " . $DAY_NUM;
    
# Get the location of DSPAM home and if AllowOverride is set for dailyQuarantineSummary
$DSPAMHOME = "";
$ALLOW_OVERRIDE = "off";
open(DCONF, $DSPAMCONF) || die("Could not open " . $DSPAMCONF . " file!");
while(<DCONF>) {
  chomp;
  my($directive, $value) = split(/\s+/);
  $DSPAMHOME = $value if ($directive eq "Home");
  $ALLOW_OVERRIDE = "on" if ($directive eq "AllowOverride" && $value eq "dailyQuarantineSummary");
}
close(DCONF);

# Create list of users having TP bigger then zero
open(IN, "$BINDIR/dspam_stats|");
while(<IN>) {
  chomp;
  s/:/ /g;
  my($username, $tp, $tn, $fp, $fn, $sc, $nc) = (split(/\s+/))[0,2,4,6,8,10,12];
  if ($tp eq "") {
    $_ = <IN>;
    s/:/ /g;
    ($tp, $tn, $fp, $fn, $sc, $nc) = (split(/\s+/))[2,4,6,8,10,12];
  }
  push(@RECIPIENT_LIST, $username) if $tp != 0;
}
close(IN);

# Get default user preference for dailyQuarantineSummary
$DEFAULT_PREF = "on";
if ($PREF_CHECK == 1 && $PREFERENCES_EXTENSION == 1) {
  open(PIPE, "$BINDIR/dspam_admin agg pref 'default'|");
  while(<PIPE>) {
    chomp;
    my($directive, $value) = split(/\=/);
    if ($directive eq "dailyQuarantineSummary") {
      $DEFAULT_PREF = $value;
      last;
    }
  }
  close(PIPE);
}

# Gather Recipient Quarantine Info
foreach $RECIPIENT (@RECIPIENT_LIST) {

  # Get User Preference from dspam_admin
  if ($ALLOW_OVERRIDE eq "on") {						# Check for Allow Overides
    open(PIPE, "$BINDIR/dspam_admin li pref " . quotemeta($RECIPIENT) . "|");
    while(<PIPE>) {
      chomp;
      my($directive, $value) = split(/\=/);
      if ($directive eq "dailyQuarantineSummary") {
        if ($value ne "on" && $value ne "off") {
          $USER_PREF = $DEFAULT_PREF;						# User Preference in valid, use default preference
        } else {
          $USER_PREF = $value;
        }
        last;
      }
    }
    close(PIPE);
  } else {
    $USER_PREF = $DEFAULT_PREF;							# Overrides off, use default preference
  }

   # Build path to Quarantine .mbox
  if ($DOMAIN_SCALE == 1) {							# Format Quarantine path for Domain Scale
    my($u, $D) = (split(/@/, $RECIPIENT));
    $MBOX = $DSPAMHOME . "/data/" . $D . "/" . $u . "/" . $u . ".mbox";
  } elsif ($LARGE_SCALE == 1) {							# Format Quarantine path for Large Scale
    $u = substr($RECIPIENT, 0, 1);
    $s = substr($RECIPIENT, 1, 1);
    $MBOX = $DSPAMHOME . "/data/" . $u . "/" . $s . "/" . $RECIPIENT . "/" . $RECIPIENT . ".mbox";
  } else {									# Format Quarantine path for Normal Scale
    $MBOX = $DSPAMHOME . "/data/" . $RECIPIENT . "/" . $RECIPIENT . ".mbox";
  }

  # Tally Quarantine messages
  $NEW = 0;
  $TOTAL = 0;
  if ($USER_PREF ne "off" && -e $MBOX) {					# Check if .mbox file exists and user pref
    open(MBOX, "<$MBOX") || die("Could not open " . $MBOX . " file!");
    while(<MBOX>) {
      s/\r?\n//;
      if ($_ ne "") {
	if ($_ =~ /^From QUARANTINE/) {
          $TOTAL++;								# Count Total messages in Quarantine
          $NEW++ if ($_ =~ /^From QUARANTINE $TODAY/);				# Count New messages in Quarantine
        }
      }
    }
    close(MBOX);
  }
  push(@Q_NEW_ITEMS, $NEW);							# Send Count to Array for later use
  push(@Q_TOTAL_ITEMS, $TOTAL);							# Send Count to Array for later use
}


# Send some emails
$SMTP = Net::SMTP->new(								# Establish SMTP Connection
	Host => $SERVER . ":" . $PORT,
	Timeout => 30) || die ("Could not connect to SMTP server " . $SERVER . ":" . $PORT . "; $!");
for ($I = 0; $I <= $#RECIPIENT_LIST; $I++) {					# Loop through Recipients List and send the message
  if (@Q_TOTAL_ITEMS[$I] != 0) {						# Don't send reminders to users with empty quarantines
    $SMTP->mail($FROM);
    $SMTP->to($RECIPIENT_LIST[$I]);
    $SMTP->data();
    $SMTP->datasend("To: $RECIPIENT_LIST[$I]\n");
    $SMTP->datasend("Subject: $SUBJECT\n");
    $SMTP->datasend("Mime-Version: 1.0\n");
    $SMTP->datasend("Content-Type: text/html; charset=UTF-8\n");
    $SMTP->datasend("<HTML>\n");
    $SMTP->datasend("<HEAD>\n");
    $SMTP->datasend("<TITLE>DSPAM Quarantine Summary for $RECIPIENT_LIST[$I]</TITLE>\n");
    $SMTP->datasend("<META HTTP-EQUIV='Content-Type' CONTENT='text/html; charset=utf-8'>\n");
    $SMTP->datasend("</HEAD>\n");
    $SMTP->datasend("<BODY>\n");
    $SMTP->datasend("<TABLE>\n");
    $SMTP->datasend("<TR><TD>Quarantine Summary for</TD><TD>$RECIPIENT_LIST[$I]</TD></TR>\n");
    $SMTP->datasend("<TR><TD>Date</TD><TD>$TODAY, $YEAR</TD></TR>\n");
    $SMTP->datasend("<TR><TD ROWSPAN='2'>&nbsp;</TD></TR>\n");
    $SMTP->datasend("<TR><TD>New Messages</TD><TD>@Q_NEW_ITEMS[$I]</TD></TR>\n");
    $SMTP->datasend("<TR><TD>Total Messages</TD><TD>@Q_TOTAL_ITEMS[$I]</TD></TR>\n");
    $SMTP->datasend("</TABLE>\n");
    $SMTP->datasend("<BR>\n");
    $SMTP->datasend("Please remember to check <A HREF='$QUARANTINE_URL' TARGET='_blank'>Your Quarantine</A> regularly.\n");
    $SMTP->datasend("</BODY>\n");
    $SMTP->datasend("</HTML>\n");
    $SMTP->dataend();
  }
}
$SMTP->quit;									# Close SMTP Connection
